/* -------------------------------- Arctic Core ------------------------------
 * Arctic Core - the open source AUTOSAR platform http://arccore.com
 *
 * Copyright (C) 2009  ArcCore AB <contact@arccore.com>
 *
 * This source code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation; See <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 * -------------------------------- Arctic Core ------------------------------*/








/* 
* Module vendor:  Autocore
* Module version: 1.0.0
* Specification: Autosar v3.0.1, Final
*
*/

// File generated on Mon Aug 17 14:11:22 CEST 2009
// File generated by org.autocore.modules.port.mpc5516

#ifndef PORT_CFG_H_
#define PORT_CFG_H_

#include "Std_Types.h"

#define	PORT_VERSION_INFO_API				STD_ON
#define	PORT_DEV_ERROR_DETECT				STD_ON
#define	PORT_PIN_DIRECTION_CHANGES_ALLOWED	STD_ON

#define		BIT0			(1<<15)
#define		BIT1			(1<<14)
#define		BIT2			(1<<13)
#define		BIT3			(1<<12)
#define		BIT4			(1<<11)
#define		BIT5			(1<<10)
#define		BIT6			(1<<9)
#define		BIT7			(1<<8)
#define		BIT8			(1<<7)
#define		BIT9			(1<<6)
#define		BIT10			(1<<5)
#define		BIT11			(1<<4)
#define		BIT12			(1<<3)
#define		BIT13			(1<<2)
#define		BIT14			(1<<1)
#define		BIT15			(1<<0)

#define		WPE_BIT			BIT14
#define		WPS_BIT			BIT15
#define		SRC0			BIT12
#define		SRC1			BIT13

#define		PULL_UP			(WPE_BIT|WPS_BIT)
#define		PULL_DOWN		(WPE_BIT)
#define		PULL_NONE		0
#define		SLEW_RATE_MIN	0
#define		SLEW_RATE_MED	BIT13
#define		SLEW_RATE_MAX	(BIT12|BIT13)
#define		HYS_ENABLE		BIT11
#define		ODE_ENABLE		BIT10
#define		IBE_ENABLE		BIT7
#define		OBE_ENABLE		BIT6
#define		PA_IO			(0)
#define		PA_FUNC0		(0)
#define		PA_FUNC1		(BIT5)
#define		PA_FUNC2		(BIT4)
#define		PA_FUNC3		(BIT4|BIT5)
#define		PA_FUNC4		(BIT3)

#define		PCR_RESET		(0)
#define		GPDO_RESET		(0)

#define		GPDO_HIGH		(1)

// Could also use an enum to name the pins here
typedef int Port_PinType;

typedef struct
{
	uint16_t padCnt;
	const uint16_t *padConfig;
	uint16_t outCnt;
	const uint8_t *outConfig;
//	uint16_t inCnt;
//	const uint8_t *inConfig;
} Port_ConfigType;

extern const Port_ConfigType PortConfigData;

#endif /*PORT_CFG_H_*/
