MEMORY
{
    flash: org = 0x00000000,   len = 0x00080000
    sram:  org = 0x40000000,   len = 0x0000c000
}
SECTIONS
{
   GROUP : {
      .rcw : { }
      .exception_tbl (VLECODE) : {}
       .text_vle (VLECODE) ALIGN(0x1000): {
             *(.text)
             *(.text_vle)
             *(.fini)
             *(.eini)
         }
       .init  : {}
       .init_vle (VLECODE) : {
             *(.init)
             *(.init_vle)
          }
        .ctors : {}
        .dtors : {}
        .rodata (CONST) : {
            *(.rdata)
            *(.rodata)
         }
      __SDATA2_START = .;
      .sdata2         : {}
      .sbss2          : {}
      __SBSS2_END = .;
	    extab      : {}
	    extabindex : {}
	    . = ALIGN(0x10);
	    __DATA_ROM = .;
	    .=.+SIZEOF(.data);
	    __SDATA = .;
	    .=.+SIZEOF(.sdata);
	    __SDATA0 = .;
	    .=.+SIZEOF(.PPC.EMB.sdata0);
	 }	 > flash
	GROUP : {
		__DATA_RAM = .;
		.data (DATA) LOAD(ADDR(__DATA_ROM)) :  {}
		.sdata (DATA) LOAD(ADDR(__SDATA)): {}
	    __DATA_END = . ;
	} > sram
	GROUP : {
	  __BSS_START = .;
	  .sbss  (BSS)  : {}
	  .bss   (BSS)  : {}
	  __BSS_END = .;
      .PPC.EMB.sdata0 LOAD(ADDR(__SDATA0)) : {}
      .PPC.EMB.sbss0  : {}
      .ramlog (DATA) : { *(.ramlog) }
	  _heap_addr = .;
	} > sram
}
_heap_end   = ADDR(sram)+SIZEOF(sram);
_heap_size  = _heap_end - _heap_addr;
__SP_INIT = _heap_end;
